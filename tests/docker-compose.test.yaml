version: '3.8'

services:
  vpn-sentinel-server-test:
    build:
      context: ..
      dockerfile: vpn-sentinel-server/Dockerfile
    container_name: vpn-sentinel-server-test
    env_file: .env.test
    ports:
      - "15554:5000"
      - "15553:5001"
    networks:
      - vpn-sentinel-test
    healthcheck:
      test: ["CMD", "sh", "-c", "python3 -c 'import os,requests;\ntry:\n requests.get(\"http://localhost:8081/health\",timeout=3).raise_for_status();\nexcept:\n api_port=os.getenv(\"VPN_SENTINEL_SERVER_API_PORT\",\"5000\"); api_path=os.getenv(\"VPN_SENTINEL_API_PATH\",\"/api/v1\"); requests.get(f\"http://localhost:{api_port}{api_path}/health\",timeout=3).raise_for_status()'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  vpn-sentinel-client-test:
    build:
      context: ..
      dockerfile: vpn-sentinel-client/Dockerfile
    container_name: vpn-sentinel-client-test
    env_file: .env.test
    environment:
      - VPN_SENTINEL_URL=http://vpn-sentinel-server-test:5000
      - VPN_SENTINEL_CLIENT_ID=test-client-docker
    depends_on:
      vpn-sentinel-server-test:
        condition: service_healthy
    networks:
      - vpn-sentinel-test
    restart: unless-stopped

networks:
  vpn-sentinel-test:
    driver: bridge
