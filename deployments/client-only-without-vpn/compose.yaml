version: "3"

services:
  vpn-sentinel-client:
    image: curlimages/curl:latest
    container_name: vpn-sentinel-client-test
    environment:
      - VPN_SENTINEL_SERVER_API_BASE_URL=${VPN_SENTINEL_SERVER_API_BASE_URL:-http://vpn-sentinel-server:5000}
      - VPN_SENTINEL_SERVER_API_PATH=${VPN_SENTINEL_SERVER_API_PATH:-/api/v1}
      - VPN_SENTINEL_CLIENT_ID=${VPN_SENTINEL_CLIENT_ID:-vpn-monitor-main}
      - VPN_SENTINEL_API_KEY=${VPN_SENTINEL_API_KEY}
      - TZ=${TZ:-UTC}
    volumes:
      - ./vpn-sentinel-client/vpn-sentinel-client.sh:/tmp/vpn-sentinel-client.sh:ro
    networks:
      - vpn-sentinel-client-test
    command: 
      - sh
      - -c
      - |
        echo "$$(date -u +'%Y-%m-%dT%H:%M:%SZ') INFO [client] 🚀 VPN Sentinel Client Starting..." &&
        sleep 30 &&
        echo "$$(date -u +'%Y-%m-%dT%H:%M:%SZ') INFO [client] ⏳ Waiting for VPN connection to stabilize..." &&
        sleep 30 &&
        echo "$$(date -u +'%Y-%m-%dT%H:%M:%SZ') INFO [config] 📁 Setting up monitoring script..." &&
        mkdir -p /home/curl_user &&
        cp /tmp/vpn-sentinel-client.sh /home/curl_user/vpn-sentinel-client.sh &&
        chmod +x /home/curl_user/vpn-sentinel-client.sh &&
        echo "$$(date -u +'%Y-%m-%dT%H:%M:%SZ') INFO [client] 🔍 Starting continuous VPN monitoring..." &&
        exec /home/curl_user/vpn-sentinel-client.sh
    restart: unless-stopped
    # Health check to ensure client monitoring is working properly
    healthcheck:
      test: >
        sh -c '
        # Check if monitoring script is running
        pgrep -f vpn-sentinel-client.sh > /dev/null || exit 1;
        # Check if we can get public IP (VPN is working)
        curl -s --max-time 10 https://ipinfo.io/ip > /dev/null || exit 1;
        # Check if we can reach monitoring server
        curl -s --max-time 5 ${VPN_SENTINEL_SERVER_API_BASE_URL}${VPN_SENTINEL_SERVER_API_PATH}/health > /dev/null || exit 1;
        echo "Client health check passed"
        '
      interval: 120s       # Check every 2 minutes (less frequent than server)
      timeout: 30s         # Allow time for network requests
      start_period: 90s    # Wait for VPN connection and initial setup
      retries: 3

networks:
  vpn-sentinel-client-test:
    driver: bridge
    name: vpn-sentinel-client-test

