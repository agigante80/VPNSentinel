# VPN Sentinel - Server-Only Deployment
# This deployment contains only the VPN Sentinel Server that receives reports
# from remote VPN Sentinel Clients. Perfect for centralized monitoring setups.

version: "3"

services:
  # =============================================================================
  # VPN SENTINEL SERVER - Receives reports and sends Telegram notifications
  # =============================================================================
  vpn-sentinel-server:
    image: python:3.11-alpine
    container_name: vpn-sentinel-server
    restart: unless-stopped
    
    # Server Configuration  
    environment:
      # Telegram Configuration (REQUIRED for notifications)
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      
      # Server Port Configuration
      - VPN_SENTINEL_SERVER_API_PORT=${VPN_SENTINEL_SERVER_API_PORT:-5000}
      - VPN_SENTINEL_SERVER_DASHBOARD_PORT=${VPN_SENTINEL_SERVER_DASHBOARD_PORT:-8080}
      
      # API Configuration (REQUIRED)
      - VPN_SENTINEL_API_KEY=${VPN_SENTINEL_API_KEY}
      - VPN_SENTINEL_SERVER_API_PATH=${VPN_SENTINEL_SERVER_API_PATH:-/api/v1}
      
      # Security Configuration
      - VPN_SENTINEL_SERVER_RATE_LIMIT_REQUESTS=${VPN_SENTINEL_SERVER_RATE_LIMIT_REQUESTS:-30}
      - VPN_SENTINEL_SERVER_ALLOWED_IPS=${VPN_SENTINEL_SERVER_ALLOWED_IPS:-}
      
      # Web Dashboard Configuration
      - VPN_SENTINEL_SERVER_DASHBOARD_ENABLED=${VPN_SENTINEL_SERVER_DASHBOARD_ENABLED:-true}
      
      # Server Monitoring Configuration
      - VPN_SENTINEL_SERVER_ALERT_THRESHOLD_MINUTES=${VPN_SENTINEL_SERVER_ALERT_THRESHOLD_MINUTES:-15}
      - VPN_SENTINEL_SERVER_CHECK_INTERVAL_MINUTES=${VPN_SENTINEL_SERVER_CHECK_INTERVAL_MINUTES:-5}
      
      # Timezone
      - TZ=${TZ:-UTC}
      
      # TLS Configuration
      - VPN_SENTINEL_TLS_CERT_PATH=${VPN_SENTINEL_TLS_CERT_PATH}
      - VPN_SENTINEL_TLS_KEY_PATH=${VPN_SENTINEL_TLS_KEY_PATH}
    
    # Expose both API and dashboard ports
    ports:
      - "${VPN_SENTINEL_SERVER_API_PORT:-5000}:5000"      # External API access
      - "${VPN_SENTINEL_SERVER_DASHBOARD_PORT:-8080}:8080" # Web Dashboard access
    
    volumes:
      - ../../vpn-sentinel-server/vpn-sentinel-server.py:/app/vpn-sentinel-server.py:ro
      - ${VPN_SENTINEL_TLS_CERT_PATH:-../../vpn-sentinel-server/vpn-sentinel-cert.pem}:${VPN_SENTINEL_TLS_CERT_PATH:-/vpn-sentinel-cert.pem}:ro
      - ${VPN_SENTINEL_TLS_KEY_PATH:-../../vpn-sentinel-server/vpn-sentinel-key.pem}:${VPN_SENTINEL_TLS_KEY_PATH:-/vpn-sentinel-key.pem}:ro
    working_dir: /app
    networks:
      - vpn-sentinel-server
      
    # Startup command with component-based logging
    command:
      - sh
      - -c
      - |
        echo "$$(date -u +'%Y-%m-%dT%H:%M:%SZ') INFO [server] ðŸ“¦ Installing VPN Sentinel Server dependencies..." &&
        pip install --no-cache-dir flask requests pytz &&
        echo "$$(date -u +'%Y-%m-%dT%H:%M:%SZ') INFO [server] ðŸš€ Starting VPN Sentinel Server..." &&
        python vpn-sentinel-server.py
        
    # Health check to ensure server is responding
    healthcheck:
      test: >
        sh -c '
        # Check if server is responding to health endpoint
        wget --no-verbose --tries=1 --spider --timeout=5 "http://localhost:5000/api/v1/health" > /dev/null 2>&1 || exit 1;
        # Check if Python process is running
        pgrep -f vpn-sentinel-server.py > /dev/null || exit 1;
        echo "Server health check passed"
        '
      interval: 60s
      timeout: 10s
      start_period: 30s
      retries: 3

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================
networks:
  vpn-sentinel-server:
    driver: bridge
    name: vpn-sentinel-server

# =============================================================================
# VOLUME CONFIGURATION (Optional - for data persistence)
# =============================================================================
volumes:
  vpn-sentinel-data:
    driver: local
    name: vpn-sentinel-server-data